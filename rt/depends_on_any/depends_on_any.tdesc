-- -*- lua -*-
local testName = "depends_on_any"

testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 "depends_on_any"
   ]],
   keywords = {testName },

   active   = true,
   testName = testName,
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     export MODULEPATH=$(testDir)/mf/Core

     remove_generated_lmod_files

     runLmod --version                         # 1
     runLmod load AA                           # 2
     runLmod --mt                              # 3
     runLmod rm   AA                           # 4
     runLmod --mt                              # 5
     runLmod load B                            # 6
     runLmod load A                            # 6
     runLmod --mt                              # 7
     runLmod rm   A                            # 8
     runLmod --mt                              # 9
     runLmod load A                            #10
     runLmod load x                            #11
     runLmod rm   A                            #12
     runLmod --mt                              #13
     runLmod load A                            #14
     runLmod rm   x                            #15
     runLmod --mt                              #16
     runLmod rm   A                            #17
     runLmod --mt                              #18
     runLmod load none                         #19
     runLmod load d                            #20
     runLmod load already                      #21
     runLmod --mt                              #22
     runLmod rm   already                      #23

     HOME=$ORIG_HOME
     cat _stdout.[0-9][0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f results.csv
     wrapperDiff --csv results.csv $(testDir)/out.txt out.txt
     wrapperDiff --csv results.csv $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) results.csv
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
