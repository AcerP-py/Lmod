#!/bin/sh
# -*- python -*-

################################################################################
# This file is python 2/3 bilingual. 
# The line """:" starts a comment in python and is a no-op in shell.
""":"
# Shell code to find and run a suitable python interpreter.
for cmd in python3 python python2; do
   command -v > /dev/null $cmd && exec $cmd $0 "$@"
done

echo "Error: Could not find a valid python interpreter --> exiting!" >&2
exit 2
":""" # this line ends the python comment and is a no-op in shell.
################################################################################

from __future__ import print_function
import os, sys, re, time, argparse, json
from LMODdb import LMODdb

class CmdLineOptions(object):
  """ Command line Options class """

  def __init__(self):
    """ Empty Ctor """
    pass
  
  def execute(self):
    """ Specify command line arguments and parse the command line"""
    parser = argparse.ArgumentParser()
    parser.add_argument("--syshost",      dest='syshost',      action="store",      default = "%",            help="system host name")
    parser.add_argument("--start",        dest='startDate',    action="store",      default = "unknown",      help="start date")
    parser.add_argument("--end",          dest='endDate',      action="store",      default = "unknown",      help="end date")
    parser.add_argument("-D",             dest='debug',        action="store_true",                           help="Debug Flag")
    parser.add_argument("--confFn",       dest='confFn',       action="store",      default="lmodV2_db.conf", help="Name of the database")
    args = parser.parse_args()
    return args



def main():

  args = CmdLineOptions().execute()

  lmod = LMODdb(args.confFn)
  
  if (args.endDate == "unknown"):
    print("Must specify end date")
    sys.exit(1)
          
  dateStr = lmod.build_dateTest(args.startDate, args.endDate)
  dateStr = dateStr.replace("and","",1)
  print("Deleting records with dates: ", dateStr)
  ans = input("Is this OK (y/N)?")
  if (ans != 'y'):
    print("Exiting!")
    sys.exit(0)
    
  
  lmod.delete_old_records(args.debug, args.syshost, args.startDate, args.endDate)


if ( __name__ == '__main__'): main()
